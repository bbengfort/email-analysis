# mailstat.console
# Console utilities for mailstat
#
# Author:   Benjamin Bengfort <benjamin@bengfort.com>
# Created:  Sun Dec 29 15:57:44 2013 -0600
#
# Copyright (C) 2013 Bengfort.com
# For license information, see LICENSE.txt
#
# ID: console.py [] benjamin@bengfort.com $

"""
Console utilities for mailstat
"""

##########################################################################
## Imports
##########################################################################

import os
import baker

from datetime import datetime
from mailstat.exceptions import ConsoleError
from mailstat.utils.testgen import TestDataGenerator

##########################################################################
## Helper functions
##########################################################################

def working_output(name="output", timestamp=False, dtfmt="%Y%m%d"):
    """
    Helper function that creates a file path from the current working dir
    and the name provided as the first argument. Optionally will add the
    time as a format string to the name object.
    """
    cwd = os.getcwd()
    if timestamp:
        try:
            name = name % datetime.now().strftime(dtfmt)
        except TypeError:
            raise ConsoleError("If timestamp is provied, a format string must be used.")
    return os.path.join(cwd, name)

##########################################################################
## Command line functions
##########################################################################

@baker.command
def testdata(names, domains, fixture=None, output=None):
    """
    Generates a testdata set from a names and domains file

    :param names: a list of names to use
    :param domains: a list of domains to use
    :param fixture: already created data to anonymize
    :param output: where to write the test fixture
    """
    output = output or working_output("email_metrics.csv")
    generator = TestDataGenerator(names, domains, fixture)
    generator.write(output)

@baker.command(default=True)
def analyze(emails, output=None):
    """
    Perform analysis of email csv and output HTML report

    :param emails: The email csv generated by MineMyMail
    :param output: The path to output the report
    """
    output = output or working_output("report-%s.html", True)
    raise NotImplementedError("This isn't full implemented quite yet")
